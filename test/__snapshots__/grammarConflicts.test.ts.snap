// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sand.jison does not have new conflicts 1`] = `
"Conflict in grammar: multiple actions possible when lookahead token is || in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 124)
Conflict in grammar: multiple actions possible when lookahead token is && in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 125)
Conflict in grammar: multiple actions possible when lookahead token is == in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 126)
Conflict in grammar: multiple actions possible when lookahead token is != in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 127)
Conflict in grammar: multiple actions possible when lookahead token is < in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 128)
Conflict in grammar: multiple actions possible when lookahead token is <= in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 129)
Conflict in grammar: multiple actions possible when lookahead token is > in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 130)
Conflict in grammar: multiple actions possible when lookahead token is >= in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 131)
Conflict in grammar: multiple actions possible when lookahead token is + in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 132)
Conflict in grammar: multiple actions possible when lookahead token is - in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 133)
Conflict in grammar: multiple actions possible when lookahead token is * in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 134)
Conflict in grammar: multiple actions possible when lookahead token is / in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 135)
Conflict in grammar: multiple actions possible when lookahead token is % in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 136)
Conflict in grammar: multiple actions possible when lookahead token is ** in state 76
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken
- shift token (then go to state 137)
Conflict in grammar: multiple actions possible when lookahead token is || in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 138)
Conflict in grammar: multiple actions possible when lookahead token is && in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 139)
Conflict in grammar: multiple actions possible when lookahead token is == in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 140)
Conflict in grammar: multiple actions possible when lookahead token is != in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 141)
Conflict in grammar: multiple actions possible when lookahead token is < in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 142)
Conflict in grammar: multiple actions possible when lookahead token is <= in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 143)
Conflict in grammar: multiple actions possible when lookahead token is > in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 144)
Conflict in grammar: multiple actions possible when lookahead token is >= in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 145)
Conflict in grammar: multiple actions possible when lookahead token is + in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 146)
Conflict in grammar: multiple actions possible when lookahead token is - in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 147)
Conflict in grammar: multiple actions possible when lookahead token is * in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 148)
Conflict in grammar: multiple actions possible when lookahead token is / in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 149)
Conflict in grammar: multiple actions possible when lookahead token is % in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 150)
Conflict in grammar: multiple actions possible when lookahead token is ** in state 77
- reduce by rule: expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken
- shift token (then go to state 151)
Conflict in grammar: multiple actions possible when lookahead token is ** in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 113)
Conflict in grammar: multiple actions possible when lookahead token is % in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 112)
Conflict in grammar: multiple actions possible when lookahead token is / in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 111)
Conflict in grammar: multiple actions possible when lookahead token is * in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 110)
Conflict in grammar: multiple actions possible when lookahead token is - in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 109)
Conflict in grammar: multiple actions possible when lookahead token is + in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 108)
Conflict in grammar: multiple actions possible when lookahead token is >= in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 107)
Conflict in grammar: multiple actions possible when lookahead token is > in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 106)
Conflict in grammar: multiple actions possible when lookahead token is <= in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 105)
Conflict in grammar: multiple actions possible when lookahead token is < in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 104)
Conflict in grammar: multiple actions possible when lookahead token is != in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 103)
Conflict in grammar: multiple actions possible when lookahead token is == in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 102)
Conflict in grammar: multiple actions possible when lookahead token is && in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 101)
Conflict in grammar: multiple actions possible when lookahead token is || in state 153
- reduce by rule: expression -> expressionIncludingRightDelimiter
- shift token (then go to state 100)

States with conflicts:
State 76
  expressionLackingRightDelimiter -> expressionLackingRightDelimiterStartingWithInfixToken . #lookaheads= } ; { || && == != < <= > >= + - * / % ** , ] )
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .|| expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .&& expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .== expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .!= expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .< expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .<= expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .> expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .>= expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .+ expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .- expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .* expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken ./ expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .% expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterStartingWithInfixToken -> expressionLackingRightDelimiterStartingWithInfixToken .** expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
State 77
  expressionLackingRightDelimiter -> expressionLackingRightDelimiterNotStartingWithInfixToken . #lookaheads= } ; { || && == != < <= > >= + - * / % ** , ] )
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .|| expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .&& expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .== expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .!= expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .< expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .<= expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .> expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .>= expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .+ expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .- expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .* expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken ./ expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .% expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionLackingRightDelimiterNotStartingWithInfixToken .** expression #lookaheads= ; } || && == != < <= > >= + - * / % ** { ] ) ,
State 153
  expression -> expressionIncludingRightDelimiter . #lookaheads= { ** % / * - + >= > <= < != == && || } ; ] ) ,
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .|| expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .&& expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .== expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .!= expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .< expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .<= expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .> expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .>= expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .+ expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .- expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .* expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter ./ expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .% expression
  expressionLackingRightDelimiterNotStartingWithInfixToken -> expressionIncludingRightDelimiter .** expression
"
`;

exports[`sand.jison does not have new conflicts 2`] = `
Object {
  "reduceReduce": 0,
  "reduceShift": 42,
  "total": 42,
}
`;
