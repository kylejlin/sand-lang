pub class ListForIfPseudex {
    yieldOne() {
        let a = +for n in arr {
            if x {
                yield if n {
                    n * n
                } else {
                    x();
                    x
                };
            }
        };
        let a = +for @r, @c, val in grid {
            if x {
                yield f(r, c, val);
            }
        };

        let a = +for n in low upto getHigh() {
            if x {
                yield n * n;
            }
        };
        let a = +for x, y, z in low upto getHigh() {
            if x {
                yield f(x, y, z);
            }
        };
        let a = +for x, y, z in low upto getHigh() step step {
            if x {
                yield f(x, y, z);
            }
        };
    }

    yieldAll() {
        let a = +for n in arr {
            if x {
                yieldall if n {
                    n * n
                } else {
                    x();
                    x
                };
            }
        };
        let a = +for @r, @c, val in grid {
            if x {
                yieldall f(r, c, val);
            }
        };

        let a = +for n in low upto getHigh() {
            if x {
                yieldall n * n;
            }
        };
        let a = +for x, y, z in low upto getHigh() {
            if x {
                yieldall f(x, y, z);
            }
        };
        let a = +for x, y, z in low upto getHigh() step step {
            if x {
                yieldall f(x, y, z);
            }
        };
    }
}